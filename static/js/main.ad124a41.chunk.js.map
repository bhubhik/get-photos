{"version":3,"sources":["components/homeComponents.js","components/searchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","SearchBar","onSubmit","Input","disabled","Form","Field","Control","Label","useState","userInput","setUserInput","onSumbit","e","preventDefault","type","placeholder","value","onChange","target","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAOeA,EALF,WAEX,OAAO,qBAAKC,UAAU,e,eCgCTC,EAhCG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACXC,GADoC,EAAfC,SACYC,OAAjCF,OACR,GADyCE,OAA1BC,MAA0BD,OAAnBE,QAAmBF,OAAVG,MACGC,mBAAS,KAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAQA,OACE,sBAAKX,UAAU,YAAf,UACE,sBAAMA,UAAU,aAAaY,SARZ,SAACC,GACpBA,EAAEC,iBACFZ,EAASQ,GACTC,EAAa,KAKX,SACE,qBAAKX,UAAU,aAAf,SACE,cAACG,EAAD,CACEH,UAAU,SACVe,KAAK,OACLC,YAAY,4CACZC,MAAOP,EACPQ,SAAU,SAACL,GAAD,OAAOF,EAAaE,EAAEM,OAAOF,cAI7C,qBAAKjB,UAAU,eAAf,SACE,cAAC,SAAD,CAAQoB,MAAM,UAAUpB,UAAU,UAAlC,0BCbOqB,MAXf,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,iDAEA,cAAC,EAAD,IACA,cAAC,EAAD,QCESsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ad124a41.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home = () => {\r\n  let name = ['Anu', 'bhab'];\r\n  return <div className='container'></div>;\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'react-bulma-components';\r\nimport { Form } from 'react-bulma-components';\r\n\r\nconst SearchBar = ({ onSubmit, disabled }) => {\r\n  const { Input, Field, Control, Label } = Form;\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(userInput);\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div className='searchBox'>\r\n      <form className='searchForm' onSumbit={handleSubmit}>\r\n        <div className='searchText'>\r\n          <Input\r\n            className='input '\r\n            type='text'\r\n            placeholder='Type here the picture you are looking for'\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n          ></Input>\r\n        </div>\r\n      </form>\r\n      <div className='searchButton'>\r\n        <Button color='primary' className='button '>\r\n          Search\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport Home from './components/homeComponents';\r\nimport SearchBar from './components/searchBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <h1 className='titleDisplay'>Look for the magic in every moment.</h1>\r\n\r\n      <Home />\r\n      <SearchBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}